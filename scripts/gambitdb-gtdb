#!/usr/bin/env python3
import sys
import argparse
import pkg_resources
sys.path.append('../')
sys.path.append('./')
from gambitdb.GtdbSpreadsheetParser import GtdbSpreadsheetParser

version = ''
try:
    version = pkg_resources.get_distribution("gambitdb").version
except pkg_resources.DistributionNotFound:
    version = 'x.y.z'

parser = argparse.ArgumentParser(
    description = 'Given a GTDB metadata spreadsheet, output a list of accessions to download, a species taxonid file and a genome metadata file',
    usage = 'gambitdb-gtdb [options]',
    formatter_class=argparse.ArgumentDefaultsHelpFormatter)

# Required input files
parser.add_argument('gtdb_metadata_spreadsheet',  help='GTDB metadata file such as bac120_metadata_r214.tsv', type=str)

# Output files
parser.add_argument('--species_taxon_output_filename', '-s', help='Output filename for with the taxonomy', default = 'species_taxa.csv', type=str)
parser.add_argument('--genome_assembly_metadata_output_filename', '-g', help='Genome metadata', default = 'assembly_metadata.csv', type=str)
parser.add_argument('--accessions_output_filename', '-a', help='Genome accessions for download', default = 'accessions_to_download.csv', type=str)

parser.add_argument('--debug', action='store_true', help='Turn on debugging', default = False)
parser.add_argument('--verbose', '-v', action='store_true', help='Turn on verbose output', default = False)

options = parser.parse_args()

GtdbSpreadsheetParser(options.gtdb_metadata_spreadsheet, 
                      options.species_taxon_output_filename, 
                      options.genome_assembly_metadata_output_filename, 
                      options.accessions_output_filename, 
                      options.debug,
                      options.verbose ).generate_spreadsheets()
