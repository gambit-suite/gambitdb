#! /usr/bin/env python3
import argparse
import sys

from gambitdb.BulkNCBIGenomeDownloader import BulkNCBIGenomeDownloader

parser = argparse.ArgumentParser(description='Large-scale genome assembly downloader')

parser.add_argument('--input', required=True, help='Input CSV file with accessions')
parser.add_argument('--output', required=True, help='Output CSV file')
parser.add_argument('--fasta-dir', required=True, help='Directory to save FASTA files')
parser.add_argument('--max-workers', type=int, default=4, help='Maximum number of parallel workers')
parser.add_argument('--batch-size', type=int, default=50, help='Number of genomes per batch (default: 50)')
parser.add_argument('--min-disk-space', type=float, default=100.0, help='Minimum required disk space in GB')
parser.add_argument('--checkpoint-file', default="download_progress.json", help='Path to checkpoint file')
parser.add_argument('--max-retries', type=int, default=3, help='Maximum retry attempts per batch')
parser.add_argument('--rate-limit', type=float, default=0.5, help='Rate limit for API requests (seconds)')
parser.add_argument('--api-key', help='NCBI API key for higher rate limits')
parser.add_argument('--log-file', help='Path to log file')
parser.add_argument('--verbose', action='store_true', help='Enable verbose logging')

args = parser.parse_args()

try:
    downloader = BulkNCBIGenomeDownloader(
        assembly_metadata_csv=args.input,
        output_assembly_csv=args.output,
        output_fasta_directory=args.fasta_dir,
        checkpoint_file=args.checkpoint_file,
        max_workers=args.max_workers,
        max_retries=args.max_retries,
        rate_limit=args.rate_limit,
        min_disk_space_gb=args.min_disk_space,
        batch_size=args.batch_size,
        log_file=args.log_file,
        api_key=args.api_key,
        verbose=args.verbose
    )

    downloader.download()
    
except KeyboardInterrupt:
    print("\nProcess interrupted. Checkpoint saved. Use --resume to continue later.")
    sys.exit(1)
except Exception as e:
    print(f"Fatal error: {e}")
    sys.exit(2)